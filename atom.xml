<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WY</title>
  
  <subtitle>个人主页</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-11-19T09:37:17.263Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>WY</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>构造函数和原型</title>
    <link href="http://yoursite.com/2018/06/08/%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E5%92%8C%E5%8E%9F%E5%9E%8B/"/>
    <id>http://yoursite.com/2018/06/08/%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E5%92%8C%E5%8E%9F%E5%9E%8B/</id>
    <published>2018-06-08T12:43:00.000Z</published>
    <updated>2019-11-19T09:37:17.263Z</updated>
    
    <content type="html"><![CDATA[<h2 id="创建对象"><a href="#创建对象" class="headerlink" title="创建对象"></a>创建对象</h2><h3 id="利用new关键字创建"><a href="#利用new关键字创建" class="headerlink" title="利用new关键字创建"></a>利用new关键字创建</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj1 = <span class="keyword">new</span> <span class="built_in">Object</span>()</span><br></pre></td></tr></table></figure><br><a id="more"></a><h3 id="利用对象字面量创建"><a href="#利用对象字面量创建" class="headerlink" title="利用对象字面量创建"></a>利用对象字面量创建</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj2 = &#123;&#125;</span><br></pre></td></tr></table></figure><br><h3 id="利用构造函数创建"><a href="#利用构造函数创建" class="headerlink" title="利用构造函数创建"></a>利用构造函数创建</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Star</span>(<span class="params">uname,age</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.uname = uname;</span><br><span class="line">  <span class="keyword">this</span>.age = age;</span><br><span class="line">  <span class="keyword">this</span>.sing = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"我会唱歌"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> zyx = <span class="keyword">new</span> Star(<span class="string">"张艺兴"</span>,<span class="number">28</span>);</span><br><span class="line">zyx.sing();</span><br></pre></td></tr></table></figure><br><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><blockquote><p>1、构造函数用于创建某一类对象，其<code>首字母要大写</code><br>2、构造函数要和<code>new</code>一起使用才有意义</p></blockquote><br><h2 id="new-执行"><a href="#new-执行" class="headerlink" title="new 执行"></a>new 执行</h2><blockquote><p>1、在内存中创建一个新的空对象<br>2、让 this 指向这个新的对象<br>3、执行构造函数里面的代码，给这个新对象添加属性和方法<br>4、返回这个新对象（所以构造函数里面不需要 return ）</p></blockquote><br><h2 id="成员"><a href="#成员" class="headerlink" title="成员"></a>成员</h2><h3 id="实例成员"><a href="#实例成员" class="headerlink" title="实例成员"></a>实例成员</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Star</span>(<span class="params">uname,age</span>) </span>&#123;       <span class="comment">//uname、age、sing都是实例成员</span></span><br><span class="line">  <span class="keyword">this</span>.uname = uname;</span><br><span class="line">  <span class="keyword">this</span>.age = age;</span><br><span class="line">  <span class="keyword">this</span>.sing = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"我会唱歌"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> zyx = <span class="keyword">new</span> Star(<span class="string">"张艺兴"</span>,<span class="number">28</span>);</span><br><span class="line"><span class="built_in">console</span>.log(zyx.uname)</span><br></pre></td></tr></table></figure><blockquote><p>实例成员：在构造函数内部创建的成员称为<code>实例成员</code>，只能由实例化的对象<code>zyx</code>来访问</p></blockquote><br><h3 id="静态成员"><a href="#静态成员" class="headerlink" title="静态成员"></a>静态成员</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Star</span>(<span class="params">uname,age</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.uname = uname;</span><br><span class="line">  <span class="keyword">this</span>.age = age;</span><br><span class="line">  <span class="keyword">this</span>.sing = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"我会唱歌"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Star.sex = <span class="string">"男"</span>;</span><br><span class="line"><span class="built_in">console</span>.log(Star.sex)</span><br></pre></td></tr></table></figure><blockquote><p>静态成员：在构造函数本身上添加的成员成为<code>静态成员</code>，<code>只能由构造函数本身来访问</code></p></blockquote><p><br><br></p><h2 id="构造函数原型"><a href="#构造函数原型" class="headerlink" title="构造函数原型"></a>构造函数原型</h2><blockquote><p>1、原型是什么？<br>一个对象，我们也称为 prototype 为<code>原型对象</code><br><br>2、原型的主要作用是什么？<br>主要作用是<code>共享方法</code></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Star</span>(<span class="params">uname,age</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.uname = uname;</span><br><span class="line">  <span class="keyword">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line">Star.prototype.sing = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">   <span class="built_in">console</span>.log(<span class="string">"我会唱歌"</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> zyx = <span class="keyword">new</span> Star(<span class="string">"张艺兴"</span>,<span class="number">28</span>);</span><br><span class="line"><span class="keyword">var</span> xmy = <span class="keyword">new</span> Star(<span class="string">"小绵羊"</span>,<span class="number">28</span>);</span><br><span class="line"></span><br><span class="line">zyx.sing()</span><br><span class="line">xmy.sing()</span><br></pre></td></tr></table></figure><blockquote><p>每一个构造函数都有一个 <code>prototype</code> 属性<br>可以把不变的方法，直接定义在 prototype 对象上，所有对象实例就可以<code>共享</code>这个方法</p></blockquote><p><br><br></p><h2 id="对象原型"><a href="#对象原型" class="headerlink" title="对象原型"></a>对象原型</h2><blockquote><p><code>__proto__</code> 指向构造函数的原型对象 <code>prototype</code><br><code>__proto__</code> 对象原型和原型对象 <code>prototype</code> 是<code>等价的</code></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Star</span>(<span class="params">uname,age</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.uname = uname;</span><br><span class="line">    <span class="keyword">this</span>.age = age;</span><br><span class="line">    <span class="comment">// this.sing = function() &#123;</span></span><br><span class="line">    <span class="comment">//     console.log("我会唱歌");</span></span><br><span class="line">    <span class="comment">// &#125;;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Star.prototype.sing = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"我会唱歌"</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> zyx = <span class="keyword">new</span> Star(<span class="string">"张艺兴"</span>,<span class="number">28</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(zyx.__proto__ === Star.prototype)           <span class="comment">//true</span></span><br></pre></td></tr></table></figure><br><blockquote><p>方法的查找规则:<br>zyx 对象是否有 sing 方法<br>如果有，执行这个对象的 sing<br>如果没有，因为<code>__proto__</code>存在，所以去构造函数原型对象 <code>prototype</code> 查找 sing 方法</p></blockquote><br><blockquote><p>利用 <code>constructor</code> 这个属性指回原来的构造函数</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Star</span>(<span class="params">uname,age</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.uname = uname;</span><br><span class="line">    <span class="keyword">this</span>.age = age;</span><br><span class="line">    <span class="comment">// this.sing = function() &#123;</span></span><br><span class="line">    <span class="comment">//     console.log("我会唱歌");</span></span><br><span class="line">    <span class="comment">// &#125;;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Star.prototype.sing = function() &#123;</span></span><br><span class="line"><span class="comment">//     console.log("我会唱歌");</span></span><br><span class="line"><span class="comment">// &#125;;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Star.prototype.dance = function() &#123;</span></span><br><span class="line"><span class="comment">//     console.log("我会跳舞");</span></span><br><span class="line"><span class="comment">// &#125;;</span></span><br><span class="line"></span><br><span class="line">Star.prototype = &#123;</span><br><span class="line">    <span class="keyword">constructor</span>:Star,</span><br><span class="line">    sing:function () &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"我会唱歌"</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    dance:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"我会跳舞"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> zyx = <span class="keyword">new</span> Star(<span class="string">"张艺兴"</span>,<span class="number">28</span>);</span><br><span class="line"><span class="built_in">console</span>.log(zyx)</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(Star.prototype)</span><br><span class="line"><span class="built_in">console</span>.log(zyx.__proto__)</span><br></pre></td></tr></table></figure><br><pre><code>Star(构造函数)  ——————  prototype(原型)   ——————  sing(方法)Star(构造函数)  ——————  prototype(原型)   ——————  constructor   ——————  Star(构造函数)Star(构造函数)  ——————  zyx(实例对象)  ——————  __proto__(原型)   ——————  sing(方法)Star(构造函数)  ——————  zyx(实例对象)  ——————  __proto__(原型)   ——————  constructor   ——————  Star(构造函数)</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;创建对象&quot;&gt;&lt;a href=&quot;#创建对象&quot; class=&quot;headerlink&quot; title=&quot;创建对象&quot;&gt;&lt;/a&gt;创建对象&lt;/h2&gt;&lt;h3 id=&quot;利用new关键字创建&quot;&gt;&lt;a href=&quot;#利用new关键字创建&quot; class=&quot;headerlink&quot; title=&quot;利用new关键字创建&quot;&gt;&lt;/a&gt;利用new关键字创建&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; obj1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;br&gt;
    
    </summary>
    
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>ES6 中的类和对象</title>
    <link href="http://yoursite.com/2018/06/07/ES6%20%E4%B8%AD%E7%9A%84%E7%B1%BB%E5%92%8C%E5%AF%B9%E8%B1%A1/"/>
    <id>http://yoursite.com/2018/06/07/ES6%20%E4%B8%AD%E7%9A%84%E7%B1%BB%E5%92%8C%E5%AF%B9%E8%B1%A1/</id>
    <published>2018-06-07T10:03:00.000Z</published>
    <updated>2019-11-18T12:19:34.110Z</updated>
    
    <content type="html"><![CDATA[<h2 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h2><br><blockquote><p><code>面向对象</code> 更贴近我们的实际生活，可以使用面向对象描述现实世界事物，但是事物分为具体的事物和抽象的事物 <br><br>抽象的事物 <code>手机</code><br>具体的事物 <code>iPhone11</code>   </p></blockquote><br><a id="more"></a><h3 id="思维特点"><a href="#思维特点" class="headerlink" title="思维特点"></a>思维特点</h3><br><ul><li>抽取（抽象）对象共用的属性和行为组织（封装）成一个类（模板）</li><li>对类进行实例化，获取类的对象</li></ul><p><br><br></p><h2 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h2><br><blockquote><p>现实生活中 <code>万物皆对象</code>，对象是 <code>一个具体的事物</code>，看得见摸得着的实物。<br>例如在 JavaScript 中，<code>字符串</code>、<code>数值</code>、<code>数组</code>、<code>函数</code>等都是对象</p></blockquote><p><br><br></p><h3 id="对象的组成"><a href="#对象的组成" class="headerlink" title="对象的组成"></a>对象的组成</h3><blockquote><p>对象是由 <code>属性</code> 和 <code>方法</code> 组成的：<br>属性：事物的 <code>特征</code>，在对象中用 <code>属性</code> 来表示（常用名词）<br>方法：事物的 <code>行为</code>，在对象中用 <code>方法</code> 来表示（常用动词）</p></blockquote><p><br><br></p><h3 id="举栗"><a href="#举栗" class="headerlink" title="举栗"></a>举栗</h3><blockquote><p>对象：<code>手机</code><br>属性：<code>黑色</code>、<code>6寸</code><br>方法：<code>发短信</code>、<code>打电话</code>、<code>拍照</code></p></blockquote><p><br><br></p><h2 id="类-calss"><a href="#类-calss" class="headerlink" title="类 calss"></a>类 calss</h2><br><blockquote><p>在 <strong>ES6</strong> 中增加了类的概念，可以使用 <code>class</code> 关键字声明一个类，之后以这个类来实例化对象。<br><code>类</code> 抽象了对象的公共部分，它泛指某一大类<br><code>对象</code> 特指某一个，通过类实例化一个具体的对象</p></blockquote><p><br><br></p><h3 id="举栗-1"><a href="#举栗-1" class="headerlink" title="举栗"></a>举栗</h3><blockquote><p>对象：<code>iPhone11</code><br>类：<code>设计稿</code><br><code>类（设计稿）</code> <code>实例化（生产出）</code> <code>对象（iPhone11）</code></p></blockquote><p><br><br></p><h3 id="创建类"><a href="#创建类" class="headerlink" title="创建类"></a>创建类</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//语法：</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Star</span> </span>&#123;</span><br><span class="line">    wangyan:dmm </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建实例：</span></span><br><span class="line"><span class="keyword">var</span> myName = <span class="keyword">new</span> Star()</span><br></pre></td></tr></table></figure><p><br><br></p><h3 id="类-constructor-构造函数"><a href="#类-constructor-构造函数" class="headerlink" title="类 constructor 构造函数"></a>类 constructor 构造函数</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Star</span> </span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span> (starName,age) &#123;</span><br><span class="line">        <span class="keyword">this</span>.unname = starName;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> lay = <span class="keyword">new</span> Star(<span class="string">"张艺兴"</span>,<span class="number">28</span>);</span><br><span class="line"><span class="keyword">var</span> wy = <span class="keyword">new</span> Star(<span class="string">"王艳"</span>,<span class="number">23</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(lay)</span><br><span class="line"><span class="built_in">console</span>.log(wy)</span><br></pre></td></tr></table></figure><p><br><br></p><h3 id="类添加方法"><a href="#类添加方法" class="headerlink" title="类添加方法"></a>类添加方法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Star</span> </span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span> (starName,age) &#123;</span><br><span class="line">        <span class="keyword">this</span>.unname = starName;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//不能加逗号</span></span><br><span class="line">    sing (song) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.unname + <span class="string">"演唱"</span> + song)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> lay = <span class="keyword">new</span> Star(<span class="string">"张艺兴"</span>,<span class="number">28</span>);</span><br><span class="line"><span class="keyword">var</span> wy = <span class="keyword">new</span> Star(<span class="string">"王艳"</span>,<span class="number">23</span>);</span><br><span class="line"><span class="built_in">console</span>.log(lay)</span><br><span class="line"><span class="built_in">console</span>.log(wy)</span><br><span class="line">lay.sing(<span class="string">"NAMANANA"</span>);</span><br><span class="line">wy.sing(<span class="string">"Honey"</span>);</span><br></pre></td></tr></table></figure><p><br><br></p><h3 id="类的继承"><a href="#类的继承" class="headerlink" title="类的继承"></a>类的继承</h3><br><h4 id="extends"><a href="#extends" class="headerlink" title="extends"></a>extends</h4><blockquote><p>子类可以继承父类的一些属性和方法</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Father</span> </span>&#123;                  <span class="comment">//父类</span></span><br><span class="line">    <span class="keyword">constructor</span>()&#123;&#125;</span><br><span class="line">    money () &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="number">1000</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Son</span> <span class="keyword">extends</span> <span class="title">Father</span></span>&#123;&#125;      <span class="comment">//子类 extends</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> son = <span class="keyword">new</span> Son();</span><br><span class="line">son.money()</span><br></pre></td></tr></table></figure><p><br><br></p><h4 id="super"><a href="#super" class="headerlink" title="super"></a>super</h4><blockquote><p><code>super</code> 用于访问和调用父类上的函数。可以调用父类的构造函数，也可以调用父类的普通函数。<br><br>继承中的属性和方法的查找原则：<code>就近原则</code>。<br>实例化子类输入一个方法，先看子类有没有这个方法，如果<code>有就先执行子类的</code>，如果<code>没有就去父类中查找</code>。<br>super 必须在子类 <code>this</code> 之前调用。</p></blockquote><p><br><br></p><p>创建一个<code>按钮</code>，使用按钮执行 <code>subtract</code> 方法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span>点击<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> that;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Father</span> </span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(x,y)&#123;</span><br><span class="line">        <span class="keyword">this</span>.x = x;</span><br><span class="line">        <span class="keyword">this</span>.y = y;</span><br><span class="line">    &#125;</span><br><span class="line">    sum () &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.x + <span class="keyword">this</span>.y)</span><br><span class="line">    &#125;</span><br><span class="line">    say () &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"我是爸爸"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Son</span> <span class="keyword">extends</span> <span class="title">Father</span></span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(x,y)&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//利用 super 调用父类中的构造函数</span></span><br><span class="line">        <span class="comment">//super 必须在子类 this 之前调用</span></span><br><span class="line">        <span class="keyword">super</span>(x,y);</span><br><span class="line"></span><br><span class="line">        that = <span class="keyword">this</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.x = x;</span><br><span class="line">        <span class="keyword">this</span>.y = y;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">document</span>.querySelector(<span class="string">"button"</span>).onclick = <span class="keyword">this</span>.subtract;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// this.subtract()</span></span><br><span class="line">        <span class="comment">// this.sum()</span></span><br><span class="line">        <span class="comment">// this.say()</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    subtract () &#123;</span><br><span class="line">        <span class="comment">//这个方法里面的 this 指向的是 btn 这个按钮，因为这个按钮调用了这个函数</span></span><br><span class="line">        <span class="built_in">console</span>.log(that.x - that.y)    <span class="comment">//that 里面存储的是 constructor 里的this</span></span><br><span class="line">    &#125;</span><br><span class="line">    say () &#123;</span><br><span class="line">        <span class="comment">// super.say() 就是调用父类中的普通函数 say()</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">super</span>.say() + <span class="string">"的儿子"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> son = <span class="keyword">new</span> Son(<span class="number">10</span>,<span class="number">2</span>);</span><br></pre></td></tr></table></figure><p><br><br></p><h3 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h3><blockquote><p>1、定义类名首字母<code>大写</code> 。<br>2、constructor 可以接受传递过来的参数，同时返回实例对象。<br>3、new 生成实例时，就会自动调用 constructor，即使不写 constructor，类也会自动生成这个函数。<br>4、生成实例 <code>new</code> 不能省略。<br>5、类名后面没有（） ,生成实例类名后面加（），构造函数不加 function 。<br>6、在 ES6 中没有变量提升，所以<code>必须先定义类</code>，才能通过类实例化对象。<br>7、类里面共有的属性和方法一定要加 <code>this</code> 使用。<br>8、类里面的 <code>this指向</code>问题。<br>9、constructor 里面的 this 指向实例对象，对象方法的 this 指向这个方法的调用者。</p></blockquote><p><br><br></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;面向对象&quot;&gt;&lt;a href=&quot;#面向对象&quot; class=&quot;headerlink&quot; title=&quot;面向对象&quot;&gt;&lt;/a&gt;面向对象&lt;/h2&gt;&lt;br&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;面向对象&lt;/code&gt; 更贴近我们的实际生活，可以使用面向对象描述现实世界事物，但是事物分为具体的事物和抽象的事物 &lt;br&gt;&lt;br&gt;抽象的事物 &lt;code&gt;手机&lt;/code&gt;&lt;br&gt;具体的事物 &lt;code&gt;iPhone11&lt;/code&gt;   &lt;/p&gt;
&lt;/blockquote&gt;
&lt;br&gt;
    
    </summary>
    
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
      <category term="es6" scheme="http://yoursite.com/tags/es6/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript 闭包</title>
    <link href="http://yoursite.com/2018/06/05/Javascript%20%E9%97%AD%E5%8C%85/"/>
    <id>http://yoursite.com/2018/06/05/Javascript%20%E9%97%AD%E5%8C%85/</id>
    <published>2018-06-05T03:54:00.000Z</published>
    <updated>2019-11-18T12:19:18.162Z</updated>
    
    <content type="html"><![CDATA[<h3 id="变量的作用域"><a href="#变量的作用域" class="headerlink" title="变量的作用域"></a>变量的作用域</h3><br><blockquote><p>函数内部可以直接读取全局变量</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> text = <span class="string">"hello,world!"</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(text)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fun()       <span class="comment">//hello,world!</span></span><br></pre></td></tr></table></figure><br><a id="more"></a><blockquote><p>函数外部不可以读取函数内部的变量</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> text = <span class="string">"hello,world!"</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(text)      <span class="comment">//text is not defined</span></span><br></pre></td></tr></table></figure><br><blockquote><p>函数内部声明全局变量</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">    text = <span class="string">"hello,world!"</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(text)      <span class="comment">//hello,world!</span></span><br></pre></td></tr></table></figure><h3 id="从外部读取局部变量"><a href="#从外部读取局部变量" class="headerlink" title="从外部读取局部变量"></a>从外部读取局部变量</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> num = <span class="number">999</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>) </span>&#123;       </span><br><span class="line">        alert(num)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> foo()</span><br><span class="line">&#125;</span><br><span class="line">fun()</span><br></pre></td></tr></table></figure><h3 id="用途"><a href="#用途" class="headerlink" title="用途"></a>用途</h3><blockquote><p>读取函数内部的变量<br>变量值始终保持在内存中</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> num = <span class="number">999</span>;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">       num += <span class="number">1</span></span><br><span class="line">       <span class="built_in">console</span>.log(num)</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> result = fun()</span><br><span class="line">result()        <span class="comment">//1000</span></span><br><span class="line">result()        <span class="comment">//1001</span></span><br><span class="line">result()        <span class="comment">//1002</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;变量的作用域&quot;&gt;&lt;a href=&quot;#变量的作用域&quot; class=&quot;headerlink&quot; title=&quot;变量的作用域&quot;&gt;&lt;/a&gt;变量的作用域&lt;/h3&gt;&lt;br&gt;

&lt;blockquote&gt;
&lt;p&gt;函数内部可以直接读取全局变量&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; text = &lt;span class=&quot;string&quot;&gt;&quot;hello,world!&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fun&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(text)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fun()       &lt;span class=&quot;comment&quot;&gt;//hello,world!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;br&gt;
    
    </summary>
    
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript 语言中的 this 详解</title>
    <link href="http://yoursite.com/2018/06/04/JavaScript%20%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%20this%20%E8%AF%A6%E8%A7%A3/"/>
    <id>http://yoursite.com/2018/06/04/JavaScript%20%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%20this%20%E8%AF%A6%E8%A7%A3/</id>
    <published>2018-06-04T07:39:00.000Z</published>
    <updated>2019-11-18T12:18:56.551Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、涵义"><a href="#1、涵义" class="headerlink" title="1、涵义"></a>1、涵义</h3><p><code>this</code> 是属性或方法“当前”所在的对象 </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.name</span><br></pre></td></tr></table></figure><br><a id="more"></a><blockquote><p>上面代码中，<code>this</code> 就代表 <code>name</code> 属性当前所在的对象。</p></blockquote><p>下面是一个实际的例子：</p><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> people = &#123;</span><br><span class="line">    name=<span class="string">"wangyan"</span>,</span><br><span class="line">    describe:<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="string">'姓名：'</span> + <span class="keyword">this</span>.name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">people.describe()</span><br></pre></td></tr></table></figure><br><p>上面代码中，<code>this.name</code> 表示 <code>name</code> 属性所在的那个对象。由于 <code>this.name</code> 是在 <code>describe</code> 方法中调用，而 <code>describe</code> 方法所在的对象就是 <code>people</code>,因此 <code>this</code> 指向 <code>people</code>, <code>this.name</code> 就是 <code>people</code></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1、涵义&quot;&gt;&lt;a href=&quot;#1、涵义&quot; class=&quot;headerlink&quot; title=&quot;1、涵义&quot;&gt;&lt;/a&gt;1、涵义&lt;/h3&gt;&lt;p&gt;&lt;code&gt;this&lt;/code&gt; 是属性或方法“当前”所在的对象 &lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;br&gt;
    
    </summary>
    
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript 面向对象编程</title>
    <link href="http://yoursite.com/2018/06/03/JavaScript%20%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B/"/>
    <id>http://yoursite.com/2018/06/03/JavaScript%20%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B/</id>
    <published>2018-06-03T02:21:00.000Z</published>
    <updated>2019-11-18T12:18:30.585Z</updated>
    
    <content type="html"><![CDATA[<h2 id="面向过程编程"><a href="#面向过程编程" class="headerlink" title="面向过程编程"></a>面向过程编程</h2><br><blockquote><p><code>面向过程</code> 就是分析功能所需要的步骤，然后用函数一步一步实现，使用的时候一个一个依次调用</p></blockquote><a id="more"></a><br><h3 id="举栗"><a href="#举栗" class="headerlink" title="举栗"></a>举栗</h3><blockquote><p>把大象装进冰箱需要几步 <br><br><code>打开冰箱</code>    ——&gt;   <code>大象装进去</code>    ——&gt;   <code>关上冰箱门</code></p></blockquote><p><br><br></p><h2 id="面向对象编程"><a href="#面向对象编程" class="headerlink" title="面向对象编程"></a>面向对象编程</h2><br><blockquote><p><code>面向对象</code> 就是把事务分解成一个一个的对象，然后由对象之间分工与合作</p></blockquote><br><h3 id="举栗-1"><a href="#举栗-1" class="headerlink" title="举栗"></a>举栗</h3><blockquote><p>把大象装进冰箱需要几步</p> <br><p>1、对象：<code>大象</code>  功能：<code>进去</code></p> <br><p>2、对象：<code>冰箱</code>  功能：<code>打开</code> <code>关闭</code></p> <br><p>3、使用大象和冰箱的功能</p></blockquote><br><h3 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h3><br><ul><li>封装性</li><li>继承性</li><li>多态性</li></ul><p><br><br></p><h2 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h2><br><table style="width: 100%;max-width:1000px;margin: 0 auto;">    <tr style="background: #2d2d2d">        <th></th>        <th>面向过程</th>        <th>面向对象</th>    </tr>    <tr>        <th>优点</th>        <th>性能比面向对象高</th>        <th>易复用、易维护、易扩展</th>    </tr>    <tr>        <th>缺点</th>        <th>不易复用、不易维护、不易扩展</th>        <th>性能比面向过程低</th>    </tr></table><p><br><br></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;面向过程编程&quot;&gt;&lt;a href=&quot;#面向过程编程&quot; class=&quot;headerlink&quot; title=&quot;面向过程编程&quot;&gt;&lt;/a&gt;面向过程编程&lt;/h2&gt;&lt;br&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;面向过程&lt;/code&gt; 就是分析功能所需要的步骤，然后用函数一步一步实现，使用的时候一个一个依次调用&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="web前端" scheme="http://yoursite.com/categories/web%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>Markdown 语法</title>
    <link href="http://yoursite.com/2018/04/14/Markdown%20%E8%AF%AD%E6%B3%95/"/>
    <id>http://yoursite.com/2018/04/14/Markdown%20%E8%AF%AD%E6%B3%95/</id>
    <published>2018-04-14T10:20:00.000Z</published>
    <updated>2019-11-18T12:18:15.350Z</updated>
    
    <content type="html"><![CDATA[<h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题   </span><br><span class="line">## 二级标题   </span><br><span class="line">### 三级标题   </span><br><span class="line">#### 四级标题   </span><br><span class="line">##### 五级标题   </span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure><a id="more"></a><p><br><br></p><h2 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//段落之间要有空行 </span></span><br><span class="line"></span><br><span class="line">在段落中&lt;br&gt;添加换行</span><br></pre></td></tr></table></figure><br><p><code>换行效果：</code></p><blockquote><p>在段落中<br>添加换行</p></blockquote><p><br><br></p><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;引用内容</span><br><span class="line">&gt;&gt;嵌套的引用</span><br></pre></td></tr></table></figure><br><p><code>引用效果：</code></p><blockquote><p>引用内容</p><blockquote><p>嵌套的引用</p></blockquote></blockquote><p><br><br></p><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//无序列表（符号+空格）</span></span><br><span class="line">* 无序列表一</span><br><span class="line">+ 无序列表二</span><br><span class="line">- 无序列表三</span><br><span class="line"></span><br><span class="line"><span class="comment">//有序列表（数字+空格）</span></span><br><span class="line"><span class="number">1.</span> 有序列表一  </span><br><span class="line"><span class="number">2.</span> 有序列表二    </span><br><span class="line"><span class="number">3.</span> 有序列表三</span><br><span class="line"></span><br><span class="line"><span class="comment">//嵌套列表</span></span><br><span class="line"><span class="number">1.</span> 嵌套<span class="number">1</span></span><br><span class="line">  + 嵌套<span class="number">1</span><span class="number">-1</span></span><br><span class="line">  + 嵌套<span class="number">1</span><span class="number">-2</span></span><br><span class="line"><span class="number">2.</span> 嵌套<span class="number">2</span></span><br><span class="line">  + 嵌套<span class="number">2</span><span class="number">-1</span></span><br><span class="line">  + 嵌套<span class="number">2</span><span class="number">-2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//任务列表</span></span><br><span class="line">- [x] 表示打勾</span><br><span class="line">- [ ] 表示不打勾</span><br></pre></td></tr></table></figure><br><p><code>无序列表效果：</code></p><blockquote><ul><li>无序列表一</li></ul><ul><li>无序列表二</li></ul><ul><li>无序列表三</li></ul></blockquote><br><p><code>有序列表效果：</code></p><blockquote><ol><li>有序列表一  </li><li>有序列表二    </li><li>有序列表三</li></ol></blockquote><br><p><code>嵌套列表效果：</code></p><blockquote><ol><li>嵌套1<ul><li>嵌套1-1</li><li>嵌套1-2</li></ul></li><li>嵌套2<ul><li>嵌套2-1</li><li>嵌套2-2</li></ul></li></ol></blockquote><br><p><code>任务列表效果：</code></p><blockquote><ul><li><input checked="" disabled="" type="checkbox"> 表示打勾</li><li><input disabled="" type="checkbox"> 表示不打勾 </li></ul></blockquote><p><br><br></p><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| th1 | th2 | th3 |     <span class="comment">//表头</span></span><br><span class="line">| --- | --- | --- |     <span class="comment">//对齐 左对齐 :--    |   居中 :--:   |  右对齐  --:</span></span><br><span class="line">| td1 | td1 | td1 |     <span class="comment">//最左最右 | 可以省略</span></span><br><span class="line">| td2 | td2 | td2 |</span><br></pre></td></tr></table></figure><br><p><code>任务列表效果：</code></p><table><thead><tr><th>th1</th><th>th2</th><th>th3</th></tr></thead><tbody><tr><td>td1</td><td>td1</td><td>td1</td></tr><tr><td>td2</td><td>td2</td><td>td2</td></tr></tbody></table><p><br><br></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//行内</span></span><br><span class="line">这是一个<span class="string">`行内`</span>高亮代码</span><br><span class="line"></span><br><span class="line"><span class="comment">//四个空格</span></span><br><span class="line">    text = <span class="string">"Hello, world!"</span></span><br><span class="line">    print text</span><br><span class="line"></span><br><span class="line"><span class="comment">//三个`</span></span><br><span class="line"><span class="string">``</span><span class="string">`text</span></span><br><span class="line"><span class="string">text = "Hello, world!"</span></span><br><span class="line"><span class="string">print text</span></span><br><span class="line"><span class="string">`</span><span class="string">``</span></span><br></pre></td></tr></table></figure><br><p><code>行效果：</code><br>这是一个<code>行内</code>高亮代码<br><br></p><p><code>块效果：</code></p><pre><code>var text = Hello, world!function(){    console.log(text);}</code></pre><p><br><br></p><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">***</span><br><span class="line">------</span><br><span class="line">___</span><br></pre></td></tr></table></figure><br><p><code>效果：</code></p><hr><hr><hr><p><br><br></p><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//自动链接</span></span><br><span class="line">http:<span class="comment">//www.google.com/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//普通链接</span></span><br><span class="line">[Google](http:<span class="comment">//www.google.com/ "google")</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//本地链接</span></span><br><span class="line">[logo.svg](./logo.svg)</span><br><span class="line"></span><br><span class="line"><span class="comment">//参考式链接</span></span><br><span class="line">[Google][]</span><br><span class="line"></span><br><span class="line">[Google]: http:<span class="comment">//www.google.com/ "google"</span></span><br></pre></td></tr></table></figure><br><p><code>效果：</code></p><blockquote><p>自动链接 <a href="http://www.google.com/" target="_blank" rel="noopener">http://www.google.com/</a><br>普通链接 <a href="http://www.google.com/" target="_blank" rel="noopener" title="google">Google</a><br>本地链接 <a href="./logo.svg">logo.svg</a><br>参考式链接 <a href="http://www.google.com/" target="_blank" rel="noopener" title="google">Google</a></p></blockquote><p><br><br></p><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//行内式</span></span><br><span class="line">![ImgTitle](https:<span class="comment">//encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS8yYfVLBtiheKzo9f3x3NjM_xUgJvepjxVElc64h-2smbTmD4fDw&amp;s "GitHub,Social Coding")</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//参考式</span></span><br><span class="line">![ImgTitle][]</span><br><span class="line"></span><br><span class="line">[ImgTitle]: https:<span class="comment">//encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS8yYfVLBtiheKzo9f3x3NjM_xUgJvepjxVElc64h-2smbTmD4fDw&amp;s "GitHub,Social Coding"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//&lt;img /&gt;标签</span></span><br><span class="line">&lt;img src=<span class="string">"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS8yYfVLBtiheKzo9f3x3NjM_xUgJvepjxVElc64h-2smbTmD4fDw&amp;s"</span> alt=<span class="string">"ImgTitle"</span> title=<span class="string">"ImgTitle"</span>  /&gt;</span><br></pre></td></tr></table></figure><br><p><code>效果：</code></p><blockquote><p>行内式 <img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS8yYfVLBtiheKzo9f3x3NjM_xUgJvepjxVElc64h-2smbTmD4fDw&s" alt="ImgTitle" title="GitHub,Social Coding"></p></blockquote><blockquote><p>参考式 <img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS8yYfVLBtiheKzo9f3x3NjM_xUgJvepjxVElc64h-2smbTmD4fDw&s" alt="ImgTitle" title="GitHub,Social Coding"></p></blockquote><blockquote><p>img标签 <img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS8yYfVLBtiheKzo9f3x3NjM_xUgJvepjxVElc64h-2smbTmD4fDw&s" alt="ImgTitle" title="ImgTitle"  /></p></blockquote><p><br><br></p><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  * 和 _  斜体</span></span><br><span class="line">Hello, *Hello*, _Hello_!</span><br><span class="line"></span><br><span class="line"><span class="comment">//  ** 和 __  粗体</span></span><br><span class="line">Hello, **Hello**, __Hello__!</span><br><span class="line"></span><br><span class="line"><span class="comment">//  *** 和 ___  粗体</span></span><br><span class="line">Hello, ***Hello***, ___Hello___!</span><br><span class="line"></span><br><span class="line"><span class="comment">//  ~~ 删除线</span></span><br><span class="line">Hello, ~~Hello, Hello~~!</span><br></pre></td></tr></table></figure><br><p><code>效果：</code></p><blockquote><p>Hello, <em>Hello</em>, <em>Hello</em>!<br>Hello, <strong>Hello</strong>, <strong>Hello</strong>!<br>Hello, <strong><em>Hello</em></strong>, <strong><em>Hello</em></strong>!<br>Hello, <del>Hello, Hello</del>!</p></blockquote><p><br><br></p><h2 id="字符转义"><a href="#字符转义" class="headerlink" title="字符转义"></a>字符转义</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Hello, \*Hello\*, \_Hello\_!</span><br><span class="line"></span><br><span class="line">&amp;lt;code&amp;gt;Hello, world!&amp;lt;<span class="regexp">/code&amp;gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">\&lt;text&gt;Hello, world!\&lt;/</span>text&gt;</span><br></pre></td></tr></table></figure><br><p><code>效果：</code></p><blockquote><p>Hello, *Hello*, _Hello_!</p></blockquote><blockquote><p>&lt;code&gt;Hello, world!&lt;/code&gt;</p></blockquote><blockquote><p>&lt;text&gt;Hello, world!&lt;/text&gt;</p></blockquote><p><br><br></p><h2 id="高亮"><a href="#高亮" class="headerlink" title="高亮"></a>高亮</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">``</span><span class="string">`</span></span><br><span class="line"><span class="string">&lt;p&gt;Hello, world!&lt;/p&gt;</span></span><br><span class="line"><span class="string">`</span><span class="string">``</span></span><br><span class="line"></span><br><span class="line"><span class="string">`Hello, world!`</span></span><br></pre></td></tr></table></figure><br><p><code>效果：</code></p><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;Hello, world!&lt;/p&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><code>Hello, world!</code></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;标题&quot;&gt;&lt;a href=&quot;#标题&quot; class=&quot;headerlink&quot; title=&quot;标题&quot;&gt;&lt;/a&gt;标题&lt;/h2&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 一级标题   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## 二级标题   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;### 三级标题   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#### 四级标题   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;##### 五级标题   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;###### 六级标题&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="Markdown" scheme="http://yoursite.com/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 常用命令整理</title>
    <link href="http://yoursite.com/2018/04/12/Hexo%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%95%B4%E7%90%86/"/>
    <id>http://yoursite.com/2018/04/12/Hexo%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%95%B4%E7%90%86/</id>
    <published>2018-04-12T10:20:00.000Z</published>
    <updated>2019-11-19T01:47:56.363Z</updated>
    
    <content type="html"><![CDATA[<h3 id="hexo-init"><a href="#hexo-init" class="headerlink" title="hexo init"></a>hexo init</h3><p><code>初始化</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init</span><br></pre></td></tr></table></figure><br><a id="more"></a><h3 id="hexo-new"><a href="#hexo-new" class="headerlink" title="hexo new"></a>hexo new</h3><p><code>创建一篇新的文章</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo <span class="keyword">new</span> <span class="string">"文章标题"</span></span><br></pre></td></tr></table></figure><br><h3 id="hexo-g"><a href="#hexo-g" class="headerlink" title="hexo g"></a>hexo g</h3><p><code>生成静态文件</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate  </span><br><span class="line">or  </span><br><span class="line">$ hexo g</span><br></pre></td></tr></table></figure><br><h3 id="hexo-s"><a href="#hexo-s" class="headerlink" title="hexo s"></a>hexo s</h3><p><code>启动服务预览</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server  </span><br><span class="line">or  </span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><br><h3 id="hexo-d"><a href="#hexo-d" class="headerlink" title="hexo d"></a>hexo d</h3><p><code>部署到远程</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy  </span><br><span class="line">or  </span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><br><h3 id="hexo-clean"><a href="#hexo-clean" class="headerlink" title="hexo clean"></a>hexo clean</h3><p><code>清除缓存文件和已生成的静态文件</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure><br><h3 id="hexo-g-d"><a href="#hexo-g-d" class="headerlink" title="hexo g -d"></a>hexo g -d</h3><p><code>组合命令</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g -d</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;hexo-init&quot;&gt;&lt;a href=&quot;#hexo-init&quot; class=&quot;headerlink&quot; title=&quot;hexo init&quot;&gt;&lt;/a&gt;hexo init&lt;/h3&gt;&lt;p&gt;&lt;code&gt;初始化&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo init&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;br&gt;
    
    </summary>
    
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo-GitHub 搭建</title>
    <link href="http://yoursite.com/2018/04/12/Hexo-GitHub%E6%90%AD%E5%BB%BA/"/>
    <id>http://yoursite.com/2018/04/12/Hexo-GitHub%E6%90%AD%E5%BB%BA/</id>
    <published>2018-04-12T07:20:00.000Z</published>
    <updated>2019-11-19T01:48:16.226Z</updated>
    
    <content type="html"><![CDATA[<h3 id="注册-Github"><a href="#注册-Github" class="headerlink" title="注册 Github"></a>注册 Github</h3><blockquote><p>Github下载地址： <a href="https://github.com" target="_blank" rel="noopener">https://github.com</a></p></blockquote><p><br><br></p><h3 id="安装-Nodejs"><a href="#安装-Nodejs" class="headerlink" title="安装 Nodejs"></a>安装 Nodejs</h3><blockquote><p>Node.js下载地址： <a href="https://nodejs.org/en/download" target="_blank" rel="noopener">https://nodejs.org/en/download</a></p></blockquote><a id="more"></a><p><br><br></p><h3 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h3><blockquote><p>Git下载地址： <a href="https://git-scm.com/download" target="_blank" rel="noopener">https://git-scm.com/download</a></p></blockquote><p><br><br></p><h3 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h3><blockquote><p>Hexo下载地址： <a href="https://hexo.io/zh-cn" target="_blank" rel="noopener" title="Hexo">Hexo</a> </p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//安装</span></span><br><span class="line">$ npm i hexo-cli -g</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化(MyBlog是您要创建的文件名)</span></span><br><span class="line">$ hexo init MyBlog</span><br><span class="line"></span><br><span class="line"><span class="comment">//安装组件</span></span><br><span class="line">$ npm install</span><br><span class="line"></span><br><span class="line"><span class="comment">//打开本地服务器</span></span><br><span class="line">$ hexo s</span><br><span class="line"></span><br><span class="line"><span class="comment">//地址</span></span><br><span class="line">http:<span class="comment">//localhost:4000/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//关闭本地服务器</span></span><br><span class="line">$ ctrl+c</span><br></pre></td></tr></table></figure><p><br><br></p><h3 id="连接-Github"><a href="#连接-Github" class="headerlink" title="连接 Github"></a>连接 Github</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//设置用户名和邮箱</span></span><br><span class="line">$ git config --global user.name <span class="string">"wy8898"</span></span><br><span class="line"></span><br><span class="line">$ git config --global user.email <span class="string">"13753068898@163.com"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//生成密钥SSH key</span></span><br><span class="line">$ ssh-keygen -t rsa -C <span class="string">"13753068898@163.com"</span></span><br><span class="line"></span><br><span class="line">$ cat ~<span class="regexp">/.ssh/i</span>d_rsa.pub</span><br><span class="line"><span class="comment">//👆复制输出内容key</span></span><br></pre></td></tr></table></figure><blockquote><p> 步骤： <code>打开Github</code> ==&gt; <code>settings</code> ==&gt; <code>SSH and GPG keys</code>  ==&gt; <code>新建SSH,名字随便</code>  ==&gt; <code>粘贴key</code>  ==&gt; <code>保存</code></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//测试SSH连接</span></span><br><span class="line">$ ssh -T git@github.com</span><br><span class="line"></span><br><span class="line"><span class="comment">//👇成功</span></span><br><span class="line"><span class="comment">//Hi wy8898! You've successfully authenticated, but GitHub does not provide shell access.</span></span><br></pre></td></tr></table></figure><blockquote><p>打开 <code>MyBlog</code> 文件根目录 <code>_config.yml</code></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//修改配置：</span></span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  <span class="comment">//你的项目地址👇</span></span><br><span class="line">  repository: https:<span class="comment">//github.com/wy8898/wy8898.github.io</span></span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p><br><br></p><h3 id="发布文章"><a href="#发布文章" class="headerlink" title="发布文章"></a>发布文章</h3><blockquote><p>在 <code>MyBlog\source\_posts</code> 下创建 <code>.md</code>, 编写 <code>md</code> 文件</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//生成静态网页</span></span><br><span class="line">$ hexo g</span><br><span class="line"></span><br><span class="line"><span class="comment">//本地预览</span></span><br><span class="line">$ hexo s</span><br><span class="line"></span><br><span class="line"><span class="comment">//上传到 Github</span></span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><p><br><br></p><h3 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h3><blockquote><p>Hexo主题官网地址： <a href="https://hexo.io/themes" target="_blank" rel="noopener">https://hexo.io/themes</a></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https:<span class="comment">//github.com/theme-next/hexo-theme-next themes/next</span></span><br></pre></td></tr></table></figure><blockquote><p>修改 <code>_config.yml</code> 中的 <code>theme: next</code></p></blockquote><p><br><br></p><h3 id="添加-about-页面"><a href="#添加-about-页面" class="headerlink" title="添加 about 页面"></a>添加 about 页面</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo <span class="keyword">new</span> page <span class="string">"about"</span></span><br></pre></td></tr></table></figure><p><br><br></p><h3 id="设置头像"><a href="#设置头像" class="headerlink" title="设置头像"></a>设置头像</h3><blockquote><p>打开文件 <code>wyBlog/themes/black-blue/_config.yml</code></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//修改配置</span></span><br><span class="line">$ avatar: <span class="regexp">/images/</span>header.jpg</span><br><span class="line"></span><br><span class="line"><span class="comment">//重新提交审核</span></span><br><span class="line">$ hexo d -g</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;注册-Github&quot;&gt;&lt;a href=&quot;#注册-Github&quot; class=&quot;headerlink&quot; title=&quot;注册 Github&quot;&gt;&lt;/a&gt;注册 Github&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Github下载地址： &lt;a href=&quot;https://github.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;安装-Nodejs&quot;&gt;&lt;a href=&quot;#安装-Nodejs&quot; class=&quot;headerlink&quot; title=&quot;安装 Nodejs&quot;&gt;&lt;/a&gt;安装 Nodejs&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Node.js下载地址： &lt;a href=&quot;https://nodejs.org/en/download&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://nodejs.org/en/download&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="Github" scheme="http://yoursite.com/tags/Github/"/>
    
      <category term="Git" scheme="http://yoursite.com/tags/Git/"/>
    
  </entry>
  
</feed>
